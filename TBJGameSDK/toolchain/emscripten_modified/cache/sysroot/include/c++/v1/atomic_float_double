#ifdef __JENOVA_DEFINED_pthread_t

template<>
_LIBCPP_INLINE_VISIBILITY
void __cxx_atomic_store(__cxx_atomic_base_impl<float> volatile* __a, float __val, memory_order __order) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
void __cxx_atomic_store(__cxx_atomic_base_impl<float> * __a, float __val, memory_order __order) _NOEXCEPT;

template<>
_LIBCPP_INLINE_VISIBILITY
void __cxx_atomic_store(__cxx_atomic_base_impl<double> volatile* __a, double __val, memory_order __order) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
void __cxx_atomic_store(__cxx_atomic_base_impl<double> * __a, double __val, memory_order __order) _NOEXCEPT;


template<>
_LIBCPP_INLINE_VISIBILITY
float __cxx_atomic_load(__cxx_atomic_base_impl<float> const volatile* __a, memory_order __order) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
float __cxx_atomic_load(__cxx_atomic_base_impl<float> const* __a, memory_order __order) _NOEXCEPT;


template<>
_LIBCPP_INLINE_VISIBILITY
double __cxx_atomic_load(__cxx_atomic_base_impl<double> const volatile* __a, memory_order __order) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
double __cxx_atomic_load(__cxx_atomic_base_impl<double> const* __a, memory_order __order) _NOEXCEPT;


template<>
_LIBCPP_INLINE_VISIBILITY
float __cxx_atomic_exchange(__cxx_atomic_base_impl<float> volatile* __a, float __value, memory_order __order) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
float __cxx_atomic_exchange(__cxx_atomic_base_impl<float> * __a, float __value, memory_order __order) _NOEXCEPT;

template<>
_LIBCPP_INLINE_VISIBILITY
double __cxx_atomic_exchange(__cxx_atomic_base_impl<double> volatile* __a, double __value, memory_order __order) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
double __cxx_atomic_exchange(__cxx_atomic_base_impl<double> * __a, double __value, memory_order __order) _NOEXCEPT;



template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<float> volatile* __a, float* __expected, float __value, memory_order __success, memory_order __failure) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<float> * __a, float* __expected, float __value, memory_order __success, memory_order __failure) _NOEXCEPT;

template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<float> volatile* __a, float* __expected, float __value, memory_order __success, memory_order __failure) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<float> * __a, float* __expected, float __value, memory_order __success, memory_order __failure) _NOEXCEPT;


template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<double> volatile* __a, double* __expected, double __value, memory_order __success, memory_order __failure) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<double> * __a, double* __expected, double __value, memory_order __success, memory_order __failure) _NOEXCEPT;

template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<double> volatile* __a, double* __expected, double __value, memory_order __success, memory_order __failure) _NOEXCEPT;
template<>
_LIBCPP_INLINE_VISIBILITY
bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<double> * __a, double* __expected, double __value, memory_order __success, memory_order __failure) _NOEXCEPT;

#endif